#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1f9ae40 .scope module, "testbench" "testbench" 2 5;
 .timescale -9 -12;
P_0x1f99e08 .param/l "PATTERN_NUMBER" 2 8, C4<001100>;
L_0x1ffc8b0 .functor BUFZ 8, L_0x1fffa20, C4<00000000>, C4<00000000>, C4<00000000>;
L_0x1ffffe0 .functor BUFZ 8, L_0x1fffef0, C4<00000000>, C4<00000000>, C4<00000000>;
L_0x2000170 .functor BUFZ 8, L_0x2000090, C4<00000000>, C4<00000000>, C4<00000000>;
L_0x2000830 .functor BUFZ 8, L_0x2002a70, C4<00000000>, C4<00000000>, C4<00000000>;
v0x1ffc240_0 .net *"_s10", 31 0, L_0x1fffcb0; 1 drivers
v0x1ffc300_0 .net *"_s101", 35 0, L_0x2002390; 1 drivers
v0x1ffc3a0_0 .net *"_s102", 4 0, C4<00000>; 1 drivers
v0x1ffc440_0 .net *"_s106", 30 0, C4<0000000000000000000000000000000>; 1 drivers
v0x1ffc4c0_0 .net *"_s107", 35 0, L_0x2002110; 1 drivers
v0x1ffc560_0 .net *"_s108", 35 0, L_0x2001bb0; 1 drivers
v0x1ffc600_0 .net *"_s112", 7 0, L_0x2002a70; 1 drivers
v0x1ffc6a0_0 .net *"_s114", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffc790_0 .net *"_s118", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffc830_0 .net *"_s119", 31 0, L_0x20026a0; 1 drivers
v0x1ffc930_0 .net *"_s120", 31 0, L_0x20028c0; 1 drivers
v0x1ffc9d0_0 .net *"_s14", 7 0, L_0x1fffef0; 1 drivers
v0x1ffcae0_0 .net *"_s18", 7 0, L_0x2000090; 1 drivers
v0x1ffcb80_0 .net *"_s2", 7 0, L_0x1fffa20; 1 drivers
v0x1ffcca0_0 .net *"_s22", 7 0, L_0x2000220; 1 drivers
v0x1ffcd40_0 .net *"_s24", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffcc00_0 .net *"_s28", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffce90_0 .net *"_s29", 31 0, L_0x2000300; 1 drivers
v0x1ffcfb0_0 .net *"_s30", 31 0, L_0x20004e0; 1 drivers
v0x1ffd030_0 .net *"_s32", 3 0, C4<0100>; 1 drivers
v0x1ffcf10_0 .net *"_s35", 35 0, L_0x20006f0; 1 drivers
v0x1ffd160_0 .net *"_s36", 4 0, C4<00011>; 1 drivers
v0x1ffd0b0_0 .net *"_s4", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffd2a0_0 .net *"_s40", 30 0, C4<0000000000000000000000000000000>; 1 drivers
v0x1ffd200_0 .net *"_s41", 35 0, L_0x2000910; 1 drivers
v0x1ffd3f0_0 .net *"_s42", 35 0, L_0x2000a40; 1 drivers
v0x1ffd340_0 .net *"_s44", 7 0, L_0x2000bd0; 1 drivers
v0x1ffd550_0 .net *"_s46", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffd490_0 .net *"_s50", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffd6c0_0 .net *"_s51", 31 0, L_0x2000d00; 1 drivers
v0x1ffd5d0_0 .net *"_s52", 31 0, L_0x2000e70; 1 drivers
v0x1ffd840_0 .net *"_s54", 3 0, C4<0100>; 1 drivers
v0x1ffd740_0 .net *"_s57", 35 0, L_0x2001020; 1 drivers
v0x1ffd9d0_0 .net *"_s58", 4 0, C4<00010>; 1 drivers
v0x1ffd8c0_0 .net *"_s62", 30 0, C4<0000000000000000000000000000000>; 1 drivers
v0x1ffdb70_0 .net *"_s63", 35 0, L_0x20011e0; 1 drivers
v0x1ffda50_0 .net *"_s64", 35 0, L_0x2001360; 1 drivers
v0x1ffdaf0_0 .net *"_s66", 7 0, L_0x2001600; 1 drivers
v0x1ffdd30_0 .net *"_s68", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffddb0_0 .net *"_s72", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffdbf0_0 .net *"_s73", 31 0, L_0x20016a0; 1 drivers
v0x1ffdc90_0 .net *"_s74", 31 0, L_0x20017f0; 1 drivers
v0x1ffdf90_0 .net *"_s76", 3 0, C4<0100>; 1 drivers
v0x1ffe010_0 .net *"_s79", 35 0, L_0x20019d0; 1 drivers
v0x1ffde30_0 .net *"_s8", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffded0_0 .net *"_s80", 4 0, C4<00001>; 1 drivers
v0x1ffe210_0 .net *"_s84", 30 0, C4<0000000000000000000000000000000>; 1 drivers
v0x1ffe290_0 .net *"_s85", 35 0, L_0x2001c60; 1 drivers
v0x1ffe0b0_0 .net *"_s86", 35 0, L_0x2001d90; 1 drivers
v0x1ffe150_0 .net *"_s88", 7 0, L_0x2001b10; 1 drivers
v0x1ffe4b0_0 .net *"_s9", 31 0, L_0x1fffaf0; 1 drivers
v0x1ffe530_0 .net *"_s90", 31 0, C4<00000000000000000000000000000001>; 1 drivers
v0x1ffe330_0 .net *"_s94", 25 0, C4<00000000000000000000000000>; 1 drivers
v0x1ffe3d0_0 .net *"_s95", 31 0, L_0x2002030; 1 drivers
v0x1ffe770_0 .net *"_s96", 31 0, L_0x20021b0; 1 drivers
v0x1ffe7f0_0 .net *"_s98", 3 0, C4<0100>; 1 drivers
v0x1ffe5b0_0 .net "bonus_check", 7 0, L_0x1ffc8b0; 1 drivers
v0x1ffe650_0 .var "bonus_in", 2 0;
v0x1ffe6d0_0 .net "bonus_tmp", 7 0, L_0x2000170; 1 drivers
v0x1ffea50_0 .var "clk", 0 0;
v0x1ffe870_0 .net "cout_out", 0 0, v0x1ffbd40_0; 1 drivers
v0x1ffe920_0 .var "error_count", 5 0;
v0x1ffe9a0_0 .var "error_count_tmp", 5 0;
v0x1ffecd0 .array "mem_bonus", 11 0, 7 0;
v0x1ffead0 .array "mem_opcode", 11 0, 7 0;
v0x1ffeb50 .array "mem_result", 47 0, 7 0;
v0x1ffebd0 .array "mem_src1", 47 0, 7 0;
v0x1ffec50 .array "mem_src2", 47 0, 7 0;
v0x1ffef80 .array "mem_zcv", 11 0, 7 0;
v0x1fff000_0 .net "opcode_tmp", 7 0, L_0x1ffffe0; 1 drivers
v0x1ffed70_0 .var "operation_in", 3 0;
v0x1ffee20_0 .net "overflow_out", 0 0, v0x1ffbde0_0; 1 drivers
v0x1ffeed0_0 .var "pattern_count", 5 0;
v0x1fff2d0_0 .net "result_correct", 31 0, L_0x20024d0; 1 drivers
v0x1fff080_0 .net "result_out", 31 0, v0x1ffbe90_0; 1 drivers
v0x1fff100_0 .var "rst_n", 0 0;
v0x1fff1b0_0 .var "src1_in", 31 0;
v0x1fff5c0_0 .var "src2_in", 31 0;
v0x1fff350_0 .var "start_check", 0 0;
v0x1fff3d0_0 .net "zcv_correct", 7 0, L_0x2000830; 1 drivers
v0x1fff450_0 .net "zcv_out", 2 0, L_0x1fff8e0; 1 drivers
v0x1fff4d0_0 .net "zero_out", 0 0, v0x1ffc1a0_0; 1 drivers
E_0x1fad040 .event posedge, v0x1ffea50_0;
L_0x1fff8e0 .concat [ 1 1 1 0], v0x1ffbde0_0, v0x1ffbd40_0, v0x1ffc1a0_0;
L_0x1fffa20 .array/port v0x1ffecd0, L_0x1fffcb0;
L_0x1fffaf0 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x1fffcb0 .arith/sub 32, L_0x1fffaf0, C4<00000000000000000000000000000001>;
L_0x1fffef0 .array/port v0x1ffead0, v0x1ffeed0_0;
L_0x2000090 .array/port v0x1ffecd0, v0x1ffeed0_0;
L_0x2000220 .array/port v0x1ffeb50, L_0x2000a40;
L_0x2000300 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x20004e0 .arith/sub 32, L_0x2000300, C4<00000000000000000000000000000001>;
L_0x20006f0 .arith/mult 36, L_0x20004e0, C4<0100>;
L_0x2000910 .concat [ 5 31 0 0], C4<00011>, C4<0000000000000000000000000000000>;
L_0x2000a40 .arith/sum 36, L_0x20006f0, L_0x2000910;
L_0x2000bd0 .array/port v0x1ffeb50, L_0x2001360;
L_0x2000d00 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x2000e70 .arith/sub 32, L_0x2000d00, C4<00000000000000000000000000000001>;
L_0x2001020 .arith/mult 36, L_0x2000e70, C4<0100>;
L_0x20011e0 .concat [ 5 31 0 0], C4<00010>, C4<0000000000000000000000000000000>;
L_0x2001360 .arith/sum 36, L_0x2001020, L_0x20011e0;
L_0x2001600 .array/port v0x1ffeb50, L_0x2001d90;
L_0x20016a0 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x20017f0 .arith/sub 32, L_0x20016a0, C4<00000000000000000000000000000001>;
L_0x20019d0 .arith/mult 36, L_0x20017f0, C4<0100>;
L_0x2001c60 .concat [ 5 31 0 0], C4<00001>, C4<0000000000000000000000000000000>;
L_0x2001d90 .arith/sum 36, L_0x20019d0, L_0x2001c60;
L_0x2001b10 .array/port v0x1ffeb50, L_0x2001bb0;
L_0x2002030 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x20021b0 .arith/sub 32, L_0x2002030, C4<00000000000000000000000000000001>;
L_0x2002390 .arith/mult 36, L_0x20021b0, C4<0100>;
L_0x2002110 .concat [ 5 31 0 0], C4<00000>, C4<0000000000000000000000000000000>;
L_0x2001bb0 .arith/sum 36, L_0x2002390, L_0x2002110;
L_0x20024d0 .concat [ 8 8 8 8], L_0x2001b10, L_0x2001600, L_0x2000bd0, L_0x2000220;
L_0x2002a70 .array/port v0x1ffef80, L_0x20028c0;
L_0x20026a0 .concat [ 6 26 0 0], v0x1ffeed0_0, C4<00000000000000000000000000>;
L_0x20028c0 .arith/sub 32, L_0x20026a0, C4<00000000000000000000000000000001>;
S_0x1face10 .scope module, "alu" "alu" 2 80, 3 3, S_0x1f9ae40;
 .timescale -9 -12;
v0x1f9a550_0 .net "ALU_control", 3 0, v0x1ffed70_0; 1 drivers
v0x1ffbca0_0 .net "bonus_control", 2 0, v0x1ffe650_0; 1 drivers
v0x1ffbd40_0 .var "cout", 0 0;
v0x1ffbde0_0 .var "overflow", 0 0;
v0x1ffbe90_0 .var "result", 31 0;
v0x1ffbf30_0 .net "rst_n", 0 0, v0x1fff100_0; 1 drivers
v0x1ffc010_0 .net "src1", 31 0, v0x1fff1b0_0; 1 drivers
v0x1ffc0b0_0 .net "src2", 31 0, v0x1fff5c0_0; 1 drivers
v0x1ffc1a0_0 .var "zero", 0 0;
E_0x1fdbb60 .event edge, v0x1ffbca0_0, v0x1f9a550_0;
    .scope S_0x1face10;
T_0 ;
    %wait E_0x1fdbb60;
    %set/v v0x1ffbe90_0, 0, 32;
    %load/v 8, v0x1f9a550_0, 4;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_0.0, 6;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_0.1, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_0.2, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_0.3, 6;
    %cmpi/u 8, 12, 4;
    %jmp/1 T_0.4, 6;
    %cmpi/u 8, 13, 4;
    %jmp/1 T_0.5, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_0.6, 6;
    %jmp T_0.7;
T_0.0 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %and 8, 40, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.1 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %or 8, 40, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.2 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %add 8, 40, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.3 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.4 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %or 8, 40, 32;
    %inv 8, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.5 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %and 8, 40, 32;
    %set/v v0x1ffbe90_0, 8, 32;
    %jmp T_0.7;
T_0.6 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %cmp/u 8, 40, 32;
    %jmp/0xz  T_0.8, 5;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.8 ;
    %load/v 8, v0x1ffbca0_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/1 T_0.10, 6;
    %cmpi/u 8, 1, 3;
    %jmp/1 T_0.11, 6;
    %cmpi/u 8, 2, 3;
    %jmp/1 T_0.12, 6;
    %cmpi/u 8, 3, 3;
    %jmp/1 T_0.13, 6;
    %cmpi/u 8, 7, 3;
    %jmp/1 T_0.14, 6;
    %cmpi/u 8, 6, 3;
    %jmp/1 T_0.15, 6;
    %jmp T_0.16;
T_0.10 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %cmp/u 8, 40, 32;
    %jmp/0xz  T_0.17, 5;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.17 ;
    %jmp T_0.16;
T_0.11 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %jmp/0xz  T_0.19, 5;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.19 ;
    %jmp T_0.16;
T_0.12 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %cmp/u 8, 40, 32;
    %inv 4, 1;
    %jmp/0xz  T_0.21, 4;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.21 ;
    %jmp T_0.16;
T_0.13 ;
    %load/v 8, v0x1ffc010_0, 32;
    %load/v 40, v0x1ffc0b0_0, 32;
    %cmp/u 8, 40, 32;
    %jmp/0xz  T_0.23, 4;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.23 ;
    %jmp T_0.16;
T_0.14 ;
    %load/v 8, v0x1ffc0b0_0, 32;
    %load/v 40, v0x1ffc010_0, 32;
    %cmp/u 8, 40, 32;
    %or 5, 4, 1;
    %jmp/0xz  T_0.25, 5;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.25 ;
    %jmp T_0.16;
T_0.15 ;
    %load/v 8, v0x1ffc0b0_0, 32;
    %load/v 40, v0x1ffc010_0, 32;
    %cmp/u 8, 40, 32;
    %jmp/0xz  T_0.27, 5;
    %movi 8, 1, 32;
    %set/v v0x1ffbe90_0, 8, 32;
T_0.27 ;
    %jmp T_0.16;
T_0.16 ;
    %jmp T_0.7;
T_0.7 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x1f9ae40;
T_1 ;
    %set/v v0x1ffea50_0, 0, 1;
    %set/v v0x1fff100_0, 0, 1;
    %set/v v0x1fff1b0_0, 0, 32;
    %set/v v0x1fff5c0_0, 0, 32;
    %set/v v0x1ffed70_0, 0, 4;
    %set/v v0x1ffe650_0, 0, 3;
    %set/v v0x1fff350_0, 0, 1;
    %set/v v0x1ffe920_0, 0, 6;
    %set/v v0x1ffe9a0_0, 0, 6;
    %set/v v0x1ffeed0_0, 0, 6;
    %vpi_call 2 66 "$readmemh", "src1.txt", v0x1ffebd0;
    %vpi_call 2 67 "$readmemh", "src2.txt", v0x1ffec50;
    %vpi_call 2 68 "$readmemh", "op.txt", v0x1ffead0;
    %vpi_call 2 69 "$readmemh", "bonus.txt", v0x1ffecd0;
    %vpi_call 2 70 "$readmemh", "result.txt", v0x1ffeb50;
    %vpi_call 2 71 "$readmemh", "zcv.txt", v0x1ffef80;
    %delay 100000, 0;
    %set/v v0x1fff100_0, 1, 1;
    %set/v v0x1fff350_0, 1, 1;
    %end;
    .thread T_1;
    .scope S_0x1f9ae40;
T_2 ;
    %delay 5000, 0;
    %load/v 8, v0x1ffea50_0, 1;
    %inv 8, 1;
    %set/v v0x1ffea50_0, 8, 1;
    %jmp T_2;
    .thread T_2;
    .scope S_0x1f9ae40;
T_3 ;
    %wait E_0x1fad040;
    %load/v 8, v0x1ffeed0_0, 6;
    %mov 14, 0, 2;
    %cmpi/u 8, 13, 8;
    %jmp/0xz  T_3.0, 4;
    %load/v 8, v0x1ffe920_0, 6;
    %cmpi/u 8, 0, 6;
    %jmp/0xz  T_3.2, 4;
    %vpi_call 2 107 "$display", "***************************************************";
    %vpi_call 2 108 "$display", " Congratulation! All data are correct! ";
    %vpi_call 2 109 "$display", "***************************************************";
T_3.2 ;
    %vpi_call 2 111 "$stop";
    %jmp T_3.1;
T_3.0 ;
    %load/v 8, v0x1fff100_0, 1;
    %jmp/0xz  T_3.4, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %ix/get 3, 40, 10;
    %load/av 8, v0x1ffebd0, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 1, 10;
    %ix/get 3, 40, 10;
    %load/av 16, v0x1ffebd0, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 2, 10;
    %ix/get 3, 40, 10;
    %load/av 24, v0x1ffebd0, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 3, 10;
    %ix/get 3, 40, 10;
    %load/av 32, v0x1ffebd0, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1fff1b0_0, 0, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %ix/get 3, 40, 10;
    %load/av 8, v0x1ffec50, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 1, 10;
    %ix/get 3, 40, 10;
    %load/av 16, v0x1ffec50, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 2, 10;
    %ix/get 3, 40, 10;
    %load/av 24, v0x1ffec50, 8;
    %load/v 40, v0x1ffeed0_0, 6;
    %mov 46, 0, 4;
    %muli 40, 4, 10;
    %addi 40, 3, 10;
    %ix/get 3, 40, 10;
    %load/av 32, v0x1ffec50, 8;
    %ix/load 0, 32, 0;
    %assign/v0 v0x1fff5c0_0, 0, 8;
    %load/v 8, v0x1fff000_0, 4; Only need 4 of 8 bits
; Save base=8 wid=4 in lookaside.
    %ix/load 0, 4, 0;
    %assign/v0 v0x1ffed70_0, 0, 8;
    %load/v 8, v0x1ffe6d0_0, 3; Only need 3 of 8 bits
; Save base=8 wid=3 in lookaside.
    %ix/load 0, 3, 0;
    %assign/v0 v0x1ffe650_0, 0, 8;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1ffeed0_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1ffeed0_0, 0, 8;
T_3.4 ;
T_3.1 ;
    %jmp T_3;
    .thread T_3;
    .scope S_0x1f9ae40;
T_4 ;
    %wait E_0x1fad040;
    %load/v 8, v0x1fff350_0, 1;
    %jmp/0xz  T_4.0, 8;
    %load/v 8, v0x1ffeed0_0, 6;
    %cmpi/u 8, 0, 6;
    %inv 4, 1;
    %jmp/0xz  T_4.2, 4;
    %load/v 8, v0x1fff080_0, 32;
    %load/v 40, v0x1fff2d0_0, 32;
    %cmp/u 8, 40, 32;
    %jmp/0xz  T_4.4, 4;
    %load/v 16, v0x1ffeed0_0, 6;
    %movi 22, 0, 26;
    %subi 16, 1, 32;
    %ix/get 3, 16, 32;
    %load/av 8, v0x1ffead0, 8;
    %cmpi/u 8, 2, 8;
    %mov 8, 4, 1;
    %load/v 17, v0x1ffeed0_0, 6;
    %movi 23, 0, 26;
    %subi 17, 1, 32;
    %ix/get 3, 17, 32;
    %load/av 9, v0x1ffead0, 8;
    %cmpi/u 9, 6, 8;
    %or 8, 4, 1;
    %load/v 9, v0x1fff450_0, 3;
    %load/v 12, v0x1fff3d0_0, 3; Only need 3 of 8 bits
; Save base=12 wid=3 in lookaside.
    %cmp/u 9, 12, 3;
    %inv 4, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_4.6, 8;
    %vpi_call 2 133 "$display", "***************************************************";
    %vpi_call 2 134 "$display", " No.%2d error!", v0x1ffeed0_0;
    %vpi_call 2 135 "$display", " Correct result: %h     Correct ZCV: %b", v0x1fff2d0_0, &PV<v0x1fff3d0_0, 0, 3>;
    %vpi_call 2 136 "$display", " Your result: %h        Your ZCV: %b\012", v0x1fff080_0, v0x1fff450_0;
    %vpi_call 2 137 "$display", "***************************************************";
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1ffe920_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1ffe920_0, 0, 8;
    %jmp T_4.7;
T_4.6 ;
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.8, 4;
    %load/x1p 8, v0x1fff450_0, 1;
    %jmp T_4.9;
T_4.8 ;
    %mov 8, 2, 1;
T_4.9 ;
; Save base=8 wid=1 in lookaside.
    %ix/load 1, 2, 0;
    %mov 4, 0, 1;
    %jmp/1 T_4.10, 4;
    %load/x1p 9, v0x1fff3d0_0, 1;
    %jmp T_4.11;
T_4.10 ;
    %mov 9, 2, 1;
T_4.11 ;
; Save base=9 wid=1 in lookaside.
    %cmp/u 8, 9, 1;
    %inv 4, 1;
    %jmp/0xz  T_4.12, 4;
    %vpi_call 2 141 "$display", "***************************************************";
    %vpi_call 2 142 "$display", " No.%2d error!", v0x1ffeed0_0;
    %vpi_call 2 143 "$display", " Correct result: %h     Correct ZCV: %b", v0x1fff2d0_0, &PV<v0x1fff3d0_0, 0, 3>;
    %vpi_call 2 144 "$display", " Your result: %h        Your ZCV: %b\012", v0x1fff080_0, v0x1fff450_0;
    %vpi_call 2 145 "$display", "***************************************************";
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1ffe920_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1ffe920_0, 0, 8;
T_4.12 ;
T_4.7 ;
    %jmp T_4.5;
T_4.4 ;
    %vpi_call 2 150 "$display", "***************************************************";
    %load/v 16, v0x1ffeed0_0, 6;
    %movi 22, 0, 26;
    %subi 16, 1, 32;
    %ix/get 3, 16, 32;
    %load/av 8, v0x1ffead0, 8;
    %cmpi/u 8, 0, 8;
    %jmp/1 T_4.14, 6;
    %cmpi/u 8, 1, 8;
    %jmp/1 T_4.15, 6;
    %cmpi/u 8, 2, 8;
    %jmp/1 T_4.16, 6;
    %cmpi/u 8, 6, 8;
    %jmp/1 T_4.17, 6;
    %cmpi/u 8, 7, 8;
    %jmp/1 T_4.18, 6;
    %cmpi/u 8, 12, 8;
    %jmp/1 T_4.19, 6;
    %cmpi/u 8, 13, 8;
    %jmp/1 T_4.20, 6;
    %jmp T_4.22;
T_4.14 ;
    %vpi_call 2 152 "$display", " AND error! ";
    %jmp T_4.22;
T_4.15 ;
    %vpi_call 2 153 "$display", " OR error! ";
    %jmp T_4.22;
T_4.16 ;
    %vpi_call 2 154 "$display", " ADDU error! ";
    %jmp T_4.22;
T_4.17 ;
    %vpi_call 2 155 "$display", " SUBU error! ";
    %jmp T_4.22;
T_4.18 ;
    %load/v 8, v0x1ffe5b0_0, 8;
    %cmpi/u 8, 0, 8;
    %jmp/1 T_4.23, 6;
    %cmpi/u 8, 3, 8;
    %jmp/1 T_4.24, 6;
    %cmpi/u 8, 6, 8;
    %jmp/1 T_4.25, 6;
    %cmpi/u 8, 1, 8;
    %jmp/1 T_4.26, 6;
    %cmpi/u 8, 7, 8;
    %jmp/1 T_4.27, 6;
    %cmpi/u 8, 2, 8;
    %jmp/1 T_4.28, 6;
    %jmp T_4.30;
T_4.23 ;
    %vpi_call 2 158 "$display", " SLTU error! ";
    %jmp T_4.30;
T_4.24 ;
    %vpi_call 2 159 "$display", " SEQ error! ";
    %jmp T_4.30;
T_4.25 ;
    %vpi_call 2 160 "$display", " SGTU error! ";
    %jmp T_4.30;
T_4.26 ;
    %vpi_call 2 161 "$display", " SLEU error! ";
    %jmp T_4.30;
T_4.27 ;
    %vpi_call 2 162 "$display", " SGEU error! ";
    %jmp T_4.30;
T_4.28 ;
    %vpi_call 2 163 "$display", " SNE error! ";
    %jmp T_4.30;
T_4.30 ;
    %jmp T_4.22;
T_4.19 ;
    %vpi_call 2 167 "$display", " NOR error! ";
    %jmp T_4.22;
T_4.20 ;
    %vpi_call 2 168 "$display", " NAND error! ";
    %jmp T_4.22;
T_4.22 ;
    %vpi_call 2 172 "$display", " No.%2d error!", v0x1ffeed0_0;
    %vpi_call 2 173 "$display", " Correct result: %h     Correct ZCV: %b", v0x1fff2d0_0, &PV<v0x1fff3d0_0, 0, 3>;
    %vpi_call 2 174 "$display", " Your result: %h     Your ZCV: %b\012", v0x1fff080_0, v0x1fff450_0;
    %vpi_call 2 175 "$display", "***************************************************";
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x1ffe920_0, 6;
    %ix/load 0, 6, 0;
    %assign/v0 v0x1ffe920_0, 0, 8;
T_4.5 ;
T_4.2 ;
T_4.0 ;
    %jmp T_4;
    .thread T_4;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "testbench.v";
    "alu0.v";
